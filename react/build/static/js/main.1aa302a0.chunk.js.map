{"version":3,"sources":["features/video/videoSlice.js","features/video/VideoList.js","features/video/VideoDetail.js","RemainingTime.js","features/cast/castSlice.js","features/cast/CastList.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["videoSlice","createSlice","name","initialState","list","reducers","saveVideoListData","state","action","payload","actions","selectVideoList","video","VideoList","props","videoListData","useSelector","dispatch","useDispatch","useEffect","length","fetch","then","response","json","data","console","log","has_error","error_code","error_message","remainingSeconds","remaining_seconds","history","replace","react_default","a","createElement","style","marginTop","textAlign","onClick","react_router_dom","to","className","map","value","index","uri","poster_uri","title","id","people","created_at","size","peopleNames","m","join","key","concat","src","alt","bytes","si","arguments","undefined","dp","thresh","Math","abs","units","u","r","pow","round","toFixed","humanFileSize","VideoDetail","_this","Object","classCallCheck","this","_super","call","handleDeleteButtonClicked","window","confirm","URLSearchParams","location","search","get","method","goBack","handleAddCastButtonClick","newCast","cast_name","headers","Content-Type","body","JSON","stringify","setState","cast","handleConfirmButtonClick","start","end","input","_input$split","split","_input$split2","slicedToArray","suffix","output","favicon","document","getElementById","href","searchParams","_this2","Fragment","controls","autoPlay","i","marginRight","type","onChange","e","target","React","Component","RemainingTime","secondsToString","bind","assertThisInitialized","intervalId","setInterval","clearInterval","seconds","floor","color","castSlice","saveCastListData","selectCastList","CastList","castListData","cast_index","media","castNames","Topics","_ref2","match","url","react_router","path","component","Topic","exact","render","_ref3","params","topicId","BasicExample","configureStore","reducer","videoReducer","castReducer","Boolean","hostname","ReactDOM","StrictMode","es","store","src_App","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1aa302a0.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const videoSlice = createSlice({\n  name: 'video',\n  initialState: {\n    list: [],\n  },\n  reducers: {\n    saveVideoListData: (state, action) => {\n      state.list = action.payload;\n    },\n  },\n});\n\nexport const { saveVideoListData } = videoSlice.actions;\n\nexport default videoSlice.reducer;\nexport const selectVideoList = state => state.video.list;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  saveVideoListData,\n  selectVideoList,\n } from './videoSlice';\nimport './VideoList.css';\nimport { Link } from \"react-router-dom\";\n\n/**\n * Format bytes as human-readable text.\n * \n * @param bytes Number of bytes.\n * @param si True to use metric (SI) units, aka powers of 1000. False to use \n *           binary (IEC), aka powers of 1024.\n * @param dp Number of decimal places to display.\n * \n * @return Formatted string.\n */\n function humanFileSize(bytes, si=false, dp=1) {\n  const thresh = si ? 1000 : 1024;\n\n  if (Math.abs(bytes) < thresh) {\n    return bytes + ' B';\n  }\n\n  const units = si \n    ? ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'] \n    : ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\n  let u = -1;\n  const r = 10**dp;\n\n  do {\n    bytes /= thresh;\n    ++u;\n  } while (Math.round(Math.abs(bytes) * r) / r >= thresh && u < units.length - 1);\n\n\n  return bytes.toFixed(dp) + ' ' + units[u];\n}\n\nexport default function VideoList(props) {\n\n  const videoListData = useSelector(selectVideoList);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (videoListData.length > 0) return;\n    fetch('/api')\n      .then(response => response.json())\n      .then(data => {\n        console.log('response', data);\n        if (data.has_error && data.error_code === 403) {\n          console.log('error', data.error_message);\n          const { remaining_seconds: remainingSeconds } = data.data;\n          props.history.replace('/remaining-time', { remainingSeconds });\n        } else {\n          dispatch(saveVideoListData(data));\n        }\n      });\n  }, []);\n\n  const handleCheckUpdate = () => {\n    fetch('/api?is_check=true')\n      .then(response => response.json())\n      .then(data => {\n        dispatch(saveVideoListData(data));\n      });\n  }\n\n  return (\n    <div>\n      <div style={{ marginTop: 16, textAlign: 'center' }}>\n        <button onClick={handleCheckUpdate}>检查更新</button>\n        <Link to=\"/cast\">Cast</Link>\n      </div>\n      <div className=\"VideoList\">\n        {videoListData.map((value, index) => {\n          const { uri, poster_uri, title, id, people, created_at, size } = value;\n          const peopleNames = people.map(m => m.name).join(',');\n          return (\n            <div key={index}>\n              <Link className=\"VideoList__link\" to={`/watch?v=${uri}&id=${id}&cast=${peopleNames}`}>\n                <img src={poster_uri} alt={title} />\n                <p className=\"VideoList__title\">{title}</p>\n                <p className=\"VideoList__title\">{created_at}</p>\n                <p className=\"VideoList__title\">{humanFileSize(size, true)}</p>\n              </Link>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n\n}\n","import React from 'react';\nimport '../../App.css';\n\nclass VideoDetail extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    console.log('dd', props.location.search);\n    const searchParams = new URLSearchParams(props.location.search);\n    this.state = {\n      cast: searchParams.get('cast').split(','),\n      newCast: '',\n      start: '',\n      end: '',\n    };\n  }\n\n  handleDeleteButtonClicked = () => {\n    if (window.confirm(\"Are you sure to delete this video?\")) { \n      const searchParams = new URLSearchParams(this.props.location.search);\n      const id = searchParams.get('id');\n      fetch(`/api/videos/${id}`, {\n        method: 'DELETE'\n      }).then(() => {\n        this.props.history.goBack();\n      });\n    }\n  }\n\n  // handleShotButtonClicked = () => {\n  //   fetch('/api/shots', {\n  //     method: 'POST'\n  //   }).then(() => {\n  //     this.props.history.goBack()\n  //   });\n  // }\n\n  handleAddCastButtonClick = () => {\n    if (!this.state.newCast) return;\n    const searchParams = new URLSearchParams(this.props.location.search);\n    const id = searchParams.get('id');\n    const data = { cast_name: this.state.newCast };\n    fetch(`/api/videos/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    }).then(() => {\n      this.setState({ cast: this.state.cast.concat(this.state.newCast), newCast: '' });\n    })\n  }\n\n  handleConfirmButtonClick = () => {\n    if (!this.state.start || !this.state.end) return;\n    const searchParams = new URLSearchParams(this.props.location.search);\n    const input = searchParams.get('v');\n    const [name, suffix]= input.split('.');\n    const output = `${name}_copy.${suffix}`;\n    const data = {\n      input,\n      output,\n      start: this.state.start,\n      end: this.state.end,\n    };\n    const favicon = document.getElementById('favicon');\n    favicon.href = process.env.PUBLIC_URL + '/loading.gif';\n    fetch('/api/ffmpeg', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    }).then(() => {\n      favicon.href = process.env.PUBLIC_URL + '/favicon.ico';\n    });\n  }\n\n  render() {\n    const searchParams = new URLSearchParams(this.props.location.search);\n    return (\n      <>\n        <video controls autoPlay>\n          <source src={searchParams.get('v')} />\n        </video>\n        <button onClick={this.handleDeleteButtonClicked}>Delete</button>\n        {/* <button onClick={this.handleShotButtonClicked}>Shot</button> */}\n        <div>{this.state.cast.map((m, i) => <span style={{ marginRight: 10 }} key={i}>{m}</span>)}</div>\n        <div>\n          <span>New Cast:</span>\n          <input type=\"text\" value={this.state.newCast} onChange={e => this.setState({ newCast: e.target.value })} />\n          <button onClick={this.handleAddCastButtonClick}>Add Cast</button>\n        </div>\n        <div>\n          <span>Start:</span>\n          <input type=\"text\" value={this.state.start} onChange={e => this.setState({ start: e.target.value })} />\n          <span>End:</span>\n          <input type=\"text\" value={this.state.end} onChange={e => this.setState({ end: e.target.value })} />\n          <button onClick={this.handleConfirmButtonClick}>Confirm</button>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default VideoDetail;\n","import React from 'react';\n\nclass RemainingTime extends React.Component {\n  constructor(props) {\n    super(props);\n\n    console.log('history state', props.location);\n    const { remainingSeconds } = props.location.state;\n    this.state = {\n      remainingSeconds,\n    };\n    this.secondsToString = this.secondsToString.bind(this);\n  }\n\n  componentDidMount() {\n    const intervalId = setInterval(() => {\n      if (this.state.remainingSeconds === 0) {\n        clearInterval(intervalId);\n        this.props.history.replace('/');\n      } else {\n        this.setState({ remainingSeconds: this.state.remainingSeconds - 1 });\n      }\n    }, 1000);\n  }\n\n  secondsToString(seconds) {\n    var numyears = Math.floor(seconds / 31536000);\n    var numdays = Math.floor((seconds % 31536000) / 86400);\n    var numhours = Math.floor(((seconds % 31536000) % 86400) / 3600);\n    var numminutes = Math.floor((((seconds % 31536000) % 86400) % 3600) / 60);\n    var numseconds = (((seconds % 31536000) % 86400) % 3600) % 60;\n    return numyears + \" years \" + numdays + \" days \" + numhours + \" hours \" + numminutes + \" minutes \" + numseconds + \" seconds\";\n  }\n\n  render() {\n    return <h1 style={{ color: 'white' }}>Remaining time: {this.secondsToString(this.state.remainingSeconds)} </h1>;\n  }\n}\n\nexport default RemainingTime;\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const castSlice = createSlice({\n  name: 'cast',\n  initialState: {\n    list: [],\n  },\n  reducers: {\n    saveCastListData: (state, action) => {\n      state.list = action.payload;\n    },\n  },\n});\n\nexport const { saveCastListData } = castSlice.actions;\nexport const selectCastList = state => state.cast.list;\nexport default castSlice.reducer;\n","import React, { useEffect } from 'react';\nimport './VideoList.css';\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  saveCastListData,\n  selectCastList,\n } from './castSlice';\n\nexport default function CastList() {\n\n  const castListData = useSelector(selectCastList);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (castListData.length > 0) return;\n    fetch('/api/cast')\n      .then(response => response.json())\n      .then(data => {\n        dispatch(saveCastListData(data));\n      });\n  }, []);\n\n  return (\n    <div>\n      {castListData.map((cast, cast_index) => {\n        const { name, media } = cast;\n        return (\n          <div key={cast_index}>\n            <div style={{ color: 'white' }}>{name}</div>\n            <div className=\"VideoList\">\n              {media.map((value, index) => {\n                const { uri, poster_uri, title, id, people } = value;\n                const castNames = people.map(m => m.name).join(',');\n                return (\n                  <div key={index}>\n                    <Link className=\"VideoList__link\" to={`/watch?v=${uri}&id=${id}&cast=${castNames}`}>\n                      <img src={poster_uri} alt={title} />\n                      <p className=\"VideoList__title\">{title}</p>\n                    </Link>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport VideoList from './features/video/VideoList';\nimport VideoDetail from './features/video/VideoDetail';\nimport RemainingTime from './RemainingTime';\nimport CastList from './features/cast/CastList';\n\nfunction BasicExample() {\n  return (\n    <Router>\n      <div>\n        <Route exact path=\"/\" component={VideoList} />\n        <Route path=\"/watch\" component={VideoDetail} />\n        <Route path=\"/topics\" component={Topics} />\n        <Route path=\"/remaining-time\" component={RemainingTime} />\n        <Route path=\"/cast\" component={CastList} />\n      </div>\n    </Router>\n  );\n}\n\nfunction About({ match }) {\n  console.log('location', match);\n  return (\n    <div>\n      <h2>About, { decodeURIComponent(match.params.path) }</h2>\n    </div>\n  );\n}\n\nfunction Topics({ match }) {\n  return (\n    <div>\n      <h2>Topics</h2>\n      <ul>\n        <li>\n          <Link to={`${match.url}/rendering`}>Rendering with React</Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/components`}>Components</Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/props-v-state`}>Props v. State</Link>\n        </li>\n      </ul>\n\n      <Route path={`${match.path}/:topicId`} component={Topic} />\n      <Route\n        exact\n        path={match.path}\n        render={() => <h3>Please select a topic.</h3>}\n      />\n    </div>\n  );\n}\n\nfunction Topic({ match }) {\n  return (\n    <div>\n      <h3>{match.params.topicId}</h3>\n    </div>\n  );\n}\n\nexport default BasicExample;\n","import { configureStore } from '@reduxjs/toolkit';\nimport videoReducer from '../features/video/videoSlice';\nimport castReducer from '../features/cast/castSlice';\n\nexport default configureStore({\n  reducer: {\n    video: videoReducer,\n    cast: castReducer,\n  }\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}