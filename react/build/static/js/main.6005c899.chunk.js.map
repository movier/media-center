{"version":3,"sources":["features/video/videoSlice.js","Utils.js","common/MediaCell.js","features/video/MediaList.js","features/cast/castSlice.js","features/video/MediaDetails.js","RemainingTime.js","features/cast/CastList.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["videoSlice","createSlice","name","initialState","list","reducers","saveVideoListData","state","action","originalData","payload","removeVideo","filter","f","id","parseInt","actions","selectVideoList","data","slice","groupByDate","currentDate","index","length","element","datetime","push","map","m","indexOf","windowWidth","window","innerWidth","e1","Object","objectSpread2","newData","newM","width","height","rowStartAt","rowEndAt","rowWidth","totalRatio","ratio","height1","height2","diff1","diff2","Math","abs","index1","display_height","display_width","mediaListGroupByDate","toConsumableArray","video","MediaCell","_ref","media","uri","poster_uri","title","people","created_at","size","duration","media_type","peopleNames","join","react_default","a","createElement","react_router_dom","className","to","concat","style","position","display","src","alt","alignItems","top","right","color","fontSize","fontWeight","Date","ceil","toISOString","substr","marginLeft","bottom","left","replace","MediaList","props","videoListData","useSelector","dispatch","useDispatch","_useState","useState","_useState2","slicedToArray","selectedFile","setSelectedFile","loadData","fetch","then","response","json","console","log","has_error","error_code","error_message","remainingSeconds","remaining_seconds","history","useEffect","_onFileUpload","asyncToGenerator","regenerator_default","mark","_callee","formData","config","wrap","_context","prev","next","FormData","forEach","file","append","onUploadProgress","progressEvent","loaded","axios","post","stop","apply","this","arguments","margin","textAlign","type","onChange","event","target","files","multiple","cursor","onClick","key","n","castSlice","saveCastListData","removeVideoFromPeople","selectCastList","cast","MediaDetails","searchParams","URLSearchParams","location","search","get","split","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","mediaDetails","setMediaDetails","videoEle","useRef","ref","controls","autoPlay","renderMedia","goBack","screenshotTime","current","currentTime","method","headers","Content-Type","body","JSON","stringify","time","alert","catch","err","error","confirm","RemainingTime","_this","classCallCheck","_super","call","secondsToString","bind","assertThisInitialized","_this2","intervalId","setInterval","clearInterval","setState","seconds","floor","React","Component","CastList","castListData","cast_index","value","Topics","_ref2","match","url","react_router","path","component","Topic","exact","render","_ref3","params","topicId","BasicExample","configureStore","reducer","videoReducer","castReducer","Boolean","hostname","ReactDOM","StrictMode","es","store","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.6005c899.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { mediaListGroupByDate } from '../../Utils';\n\nexport const videoSlice = createSlice({\n  name: 'video',\n  initialState: {\n    list: [],\n  },\n  reducers: {\n    saveVideoListData: (state, action) => {\n      const { payload: originalData } = action;\n      state.list = originalData;\n    },\n    removeVideo: (state, action) => {\n      state.list = state.list.filter(f => f.id !== parseInt(action.payload));\n    }\n  },\n});\n\nexport const { saveVideoListData, removeVideo } = videoSlice.actions;\n\nexport default videoSlice.reducer;\nexport const selectVideoList = state => mediaListGroupByDate([...state.video.list]);\n","export function mediaListGroupByDate(data) {\n  const originalData = data.slice();\n  const groupByDate = [];\n  let currentDate = null;\n  for (let index = 0; index < originalData.length; index++) {\n    const element = originalData[index];\n    const datetime = element.datetime.slice(0, 10);\n    if (currentDate !== datetime) {\n      currentDate = datetime;\n      groupByDate.push({ datetime, data: [element] });\n    } else {\n      const index = groupByDate.map(m => m.datetime).indexOf(datetime);\n      groupByDate[index].data.push(element);\n    }\n  }\n  const basicHeight = 250;\n  const windowWidth = window.innerWidth;\n\n  for (let index = 0; index < groupByDate.length; index++) {\n    const e1 = groupByDate[index];\n    const element = {...e1};\n    const originalData = element.data;\n    const newData = originalData.map(m => {\n      const newM = {...m};\n      if (!m.width) {\n        newM.width = 1000;\n      }\n      if (!m.height) {\n        newM.height = 1000;\n      }\n      return newM;\n    });\n    let rowStartAt = 0;\n    let rowEndAt = newData.length - 1;\n    let rowWidth = 0;\n    let totalRatio = 0;\n    for (let index = 0; index < newData.length; index++) {\n      const element = {...newData[index]};\n      const ratio = element.width / element.height;\n      totalRatio += ratio;\n      const width = element.width / element.height * basicHeight;\n      rowWidth += width;\n      if (rowWidth >= windowWidth) {\n        // Calculate actual height\n        const height1 = windowWidth / (totalRatio - ratio);\n        const height2 = windowWidth / totalRatio;\n        const diff1 = height1 - basicHeight;\n        const diff2 = basicHeight - height2;\n        if (Math.abs(diff1) > Math.abs(diff2)) {\n          rowEndAt = index;\n          for (let index1 = rowStartAt; index1 <= rowEndAt; index1++) {\n            newData[index1].display_height = height2;\n            newData[index1].display_width = newData[index1].width / newData[index1].height * height2\n          }\n          rowStartAt = index + 1;\n          rowWidth = 0;\n          totalRatio = 0;\n        } else {\n          rowEndAt = index - 1;\n          for (let index1 = rowStartAt; index1 <= rowEndAt; index1++) {\n            newData[index1].display_height = height1;\n            newData[index1].display_width = newData[index1].width / newData[index1].height * height1\n          }\n          rowStartAt = index;\n          rowWidth = width;\n          totalRatio = ratio;\n        }\n      } else {\n        element.display_height = basicHeight;\n        element.display_width = 'auto';\n      }\n    }\n    element.data = newData;\n  }\n  return groupByDate;\n}\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\n/**\n * Format bytes as human-readable text.\n * \n * @param bytes Number of bytes.\n * @param si True to use metric (SI) units, aka powers of 1000. False to use \n *           binary (IEC), aka powers of 1024.\n * @param dp Number of decimal places to display.\n * \n * @return Formatted string.\n */\n function humanFileSize(bytes, si=false, dp=1) {\n  const thresh = si ? 1000 : 1024;\n\n  if (Math.abs(bytes) < thresh) {\n    return bytes + ' B';\n  }\n\n  const units = si \n    ? ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'] \n    : ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\n  let u = -1;\n  const r = 10**dp;\n\n  do {\n    bytes /= thresh;\n    ++u;\n  } while (Math.round(Math.abs(bytes) * r) / r >= thresh && u < units.length - 1);\n\n\n  return bytes.toFixed(dp) + ' ' + units[u];\n}\n\nexport default function ({ media }) {\n  const { uri, poster_uri, title, id, people, created_at, size, datetime, duration, media_type, display_height, display_width } = media;\n  const peopleNames = people.map(m => m.name).join(',');\n  return (\n    <div>\n      <Link className=\"VideoList__link\" to={`/watch?v=${uri}&id=${id}&cast=${peopleNames}`}>\n        <div style={{ position: 'relative' }}>\n          <img className=\"media-cell-img\" style={{ display: 'block', width: display_width, height: display_height }}  src={poster_uri} alt={title} />\n          {media_type == 2 && <div style={{ display: 'flex', alignItems: 'center', position: 'absolute', top: 10, right: 10, color: 'white', fontSize: 12, fontWeight: 'bold' }}>{new Date(Math.ceil(duration) * 1000).toISOString().substr(11, 8)}\n          <span style={{ marginLeft: 4 }} className=\"material-symbols-outlined\">play_circle</span>\n          </div>}\n          <div style={{ position: 'absolute', bottom: 10, left: 10, color: 'white', fontSize: 12, fontWeight: 'bold' }}>\n            {/* <p className=\"VideoList__title\">{created_at.replace('T', ' ').slice(0, 16)}</p> */}\n            <p className=\"VideoList__title\">{datetime.replace('T', ' ').slice(0, 16)}</p>\n          </div>\n        </div>\n        {/* <p className=\"VideoList__title\">{title}</p> */}\n        {/* <p className=\"VideoList__title\">{humanFileSize(size, true)}</p> */}\n        {/* <p className=\"VideoList__title\">{new Date(Math.ceil(duration) * 1000).toISOString().substr(11, 8)}</p> */}\n      </Link>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  saveVideoListData,\n  selectVideoList,\n } from './videoSlice';\nimport './MediaList.css';\nimport { Link } from \"react-router-dom\";\nimport MediaCell from '../../common/MediaCell';\nimport axios from 'axios';\n\nexport default function MediaList(props) {\n\n  const videoListData = useSelector(selectVideoList);\n  const dispatch = useDispatch();\n  const [selectedFile, setSelectedFile] = useState([]);\n\n  function loadData() {\n    fetch('/api')\n      .then(response => response.json())\n      .then(data => {\n        console.log('response', data);\n        if (data.has_error && data.error_code === 403) {\n          console.log('error', data.error_message);\n          const { remaining_seconds: remainingSeconds } = data.data;\n          props.history.replace('/remaining-time', { remainingSeconds });\n        } else {\n          dispatch(saveVideoListData(data));\n        }\n      });\n  }\n\n  useEffect(() => {\n    if (videoListData.length > 0) return;\n    loadData(); \n  }, []);\n\n  const handleCheckUpdate = () => {\n    fetch('/api?is_check=true')\n      .then(response => response.json())\n      .then(data => {\n        dispatch(saveVideoListData(data));\n      });\n  }\n\n  const onFileChange = event => {\n    setSelectedFile([...event.target.files]);\n  };\n\n  async function onFileUpload() {\n    const formData = new FormData();\n    selectedFile.forEach(file => {\n      formData.append(\"file\", file); \n    });\n    const config = {\n      onUploadProgress: progressEvent => console.log(progressEvent.loaded)\n    };\n    await axios.post(\"api/media\", formData, config);\n    loadData();\n  };\n\n  return (\n    <div>\n      <div style={{ margin: 16, textAlign: 'center' }}>\n        <input type=\"file\" onChange={onFileChange} multiple />\n        <span style={{ cursor: 'pointer' }} className=\"material-symbols-outlined\" onClick={onFileUpload}>file_upload</span>\n        <span style={{ margin: '0 20px', cursor: 'pointer' }} className=\"material-symbols-outlined\" onClick={handleCheckUpdate}>sync</span>\n        <Link to=\"/cast\"><span style={{ color: 'white' }}  className=\"material-symbols-outlined\">familiar_face_and_zone</span></Link>\n      </div>\n      <div>\n        {videoListData.map(m => {\n          return (\n            <div key={m.datetime}>\n              <div>{m.datetime}</div>\n              <div className=\"MediaList\">\n                {m.data.map(n => <MediaCell key={n.id} media={n} />)}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n\n}\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const castSlice = createSlice({\n  name: 'cast',\n  initialState: {\n    list: [],\n  },\n  reducers: {\n    saveCastListData: (state, action) => {\n      state.list = action.payload;\n    },\n    removeVideoFromPeople: (state, action) => {\n      for (let index = 0; index < state.list.length; index++) {\n        const people = state.list[index];\n        people.media = people.media.filter(f => f.id !== parseInt(action.payload));\n      }\n    }\n  },\n});\n\nexport const { saveCastListData, removeVideoFromPeople } = castSlice.actions;\nexport const selectCastList = state => state.cast.list;\nexport default castSlice.reducer;\n","import React, { useState, useEffect, useRef } from 'react';\nimport '../../App.css';\nimport { useDispatch } from 'react-redux';\nimport { removeVideo } from './videoSlice';\nimport { removeVideoFromPeople } from '../cast/castSlice';\nimport './MediaDetails.css';\n\nexport default function MediaDetails(props) {\n\n  const searchParams = new URLSearchParams(props.location.search);\n  const id = searchParams.get('id');\n\n  const [cast, setCast] = useState(searchParams.get('cast').split(','));\n  const [newCast, setNewCast] = useState('');\n  const [start, setStart] = useState('');\n  const [end, setEnd] = useState('');\n  const [mediaDetails, setMediaDetails] = useState(null);\n\n  const videoEle = useRef(null);\n\n  useEffect(() => {\n    fetch(`/api/media/${id}`)\n      .then(response => response.json())\n      .then(data => {\n        setMediaDetails(data);\n      });\n  }, []);\n\n  const dispatch = useDispatch();\n\n  const handleDeleteButtonClicked = () => {\n    if (window.confirm(\"Are you sure to delete this video?\")) {\n      fetch(`/api/media/${id}`, {\n        method: 'DELETE'\n      }).then(() => {\n        dispatch(removeVideo(id));\n        dispatch(removeVideoFromPeople(id));\n        props.history.goBack();\n      });\n    }\n  }\n\n  const handleAddCastButtonClick = () => {\n    if (!newCast) return;\n    const data = { cast_name: newCast };\n    fetch(`/api/media/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    }).then(() => {\n      setCast(cast.concat(newCast));\n      setNewCast('');\n    })\n  }\n\n  const handleConfirmButtonClick = () => {\n    if (!start || !end) return;\n    const input = searchParams.get('v');\n    const [name, suffix] = input.split('.');\n    const output = `${name}_copy.${suffix}`;\n    const data = {\n      input,\n      output,\n      start,\n      end,\n    };\n    const favicon = document.getElementById('favicon');\n    favicon.href = process.env.PUBLIC_URL + '/loading.gif';\n    fetch('/api/ffmpeg', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    }).then(() => {\n      favicon.href = process.env.PUBLIC_URL + '/favicon.ico';\n    });\n  }\n\n  function renderMedia(media) {\n    switch (media.media_type) {\n      case 1:\n        return <img className=\"media\" src={media.uri} />;\n      case 2:\n        return (\n          <video ref={videoEle} className=\"media\" controls autoPlay>\n            <source src={media.uri} />\n          </video>\n        );\n      default:\n        return <h1>Unknown Media Type</h1>; \n    }\n  }\n\n  function handleBackBtnClicked() {\n    props.history.goBack();\n  }\n\n  function handleScreenshotButtonClicked() {\n    const screenshotTime = videoEle.current.currentTime;\n    fetch(`/api/thumbnail/${id}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ time: screenshotTime }),\n    }).then(() => {\n      window.alert('Screenshot success!'); \n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  if (!mediaDetails) return null;\n  return (\n    <div className=\"media-container\">\n      {renderMedia(mediaDetails)}\n      <div className='operation-container'>\n        <div className=\"operation-container__inner\">\n          <div className=\"icon-container\" onClick={handleBackBtnClicked}>\n            <span className=\"material-symbols-outlined\">arrow_back</span>\n          </div>\n          <div className=\"operation-container__inner__right\">\n            <div className=\"icon-container\" onClick={handleScreenshotButtonClicked}>\n              <span className=\"material-symbols-outlined\">screenshot</span>\n            </div>\n            <div className=\"icon-container\" onClick={handleDeleteButtonClicked}>\n              <span className=\"material-symbols-outlined\">delete</span>\n            </div>\n          </div>\n        </div>\n        {/* <div>\n          {cast.map((m, i) => (\n            <span style={{ marginRight: 10 }} key={i}>{m}</span>\n          ))}\n        </div>\n        <div>\n          <span>New Cast:</span>\n          <input type=\"text\" value={newCast} onChange={e => setNewCast(e.target.value)} />\n          <button onClick={handleAddCastButtonClick}>Add Cast</button>\n        </div>\n        <div>\n          <span>Start:</span>\n          <input type=\"text\" value={start} onChange={e => setStart(e.target.value)} />\n          <span>End:</span>\n          <input type=\"text\" value={end} onChange={e => setEnd(e.target.value)} />\n          <button onClick={handleConfirmButtonClick}>Confirm</button>\n        </div> */}\n      </div>\n    </div>\n  );\n\n}\n","import React from 'react';\n\nclass RemainingTime extends React.Component {\n  constructor(props) {\n    super(props);\n\n    console.log('history state', props.location);\n    const { remainingSeconds } = props.location.state;\n    this.state = {\n      remainingSeconds,\n    };\n    this.secondsToString = this.secondsToString.bind(this);\n  }\n\n  componentDidMount() {\n    const intervalId = setInterval(() => {\n      if (this.state.remainingSeconds === 0) {\n        clearInterval(intervalId);\n        this.props.history.replace('/');\n      } else {\n        this.setState({ remainingSeconds: this.state.remainingSeconds - 1 });\n      }\n    }, 1000);\n  }\n\n  secondsToString(seconds) {\n    var numyears = Math.floor(seconds / 31536000);\n    var numdays = Math.floor((seconds % 31536000) / 86400);\n    var numhours = Math.floor(((seconds % 31536000) % 86400) / 3600);\n    var numminutes = Math.floor((((seconds % 31536000) % 86400) % 3600) / 60);\n    var numseconds = (((seconds % 31536000) % 86400) % 3600) % 60;\n    return numyears + \" years \" + numdays + \" days \" + numhours + \" hours \" + numminutes + \" minutes \" + numseconds + \" seconds\";\n  }\n\n  render() {\n    return <h1 style={{ color: 'white' }}>Remaining time: {this.secondsToString(this.state.remainingSeconds)} </h1>;\n  }\n}\n\nexport default RemainingTime;\n","import React, { useEffect } from 'react';\n// import './MediaList.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  saveCastListData,\n  selectCastList,\n } from './castSlice';\nimport MediaCell from '../../common/MediaCell';\n\nexport default function CastList() {\n\n  const castListData = useSelector(selectCastList);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (castListData.length > 0) return;\n    fetch('/api/cast')\n      .then(response => response.json())\n      .then(data => {\n        dispatch(saveCastListData(data));\n      });\n  }, []);\n\n  return (\n    <div>\n      {castListData.map((cast, cast_index) => {\n        const { name, media } = cast;\n        return (\n          <div key={cast_index}>\n            <div style={{ color: 'white' }}>{name}</div>\n            <div className=\"MediaList\">\n              {media.map((value, index) => {\n                return <MediaCell key={index} media={value} />;\n              })}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport MediaList from './features/video/MediaList';\nimport MediaDetails from './features/video/MediaDetails';\nimport RemainingTime from './RemainingTime';\nimport CastList from './features/cast/CastList';\n\nfunction BasicExample() {\n  return (\n    <Router>\n      <Route exact path=\"/\" component={MediaList} />\n      <Route path=\"/watch\" component={MediaDetails} />\n      <Route path=\"/topics\" component={Topics} />\n      <Route path=\"/remaining-time\" component={RemainingTime} />\n      <Route path=\"/cast\" component={CastList} />\n    </Router>\n  );\n}\n\nfunction About({ match }) {\n  console.log('location', match);\n  return (\n    <div>\n      <h2>About, { decodeURIComponent(match.params.path) }</h2>\n    </div>\n  );\n}\n\nfunction Topics({ match }) {\n  return (\n    <div>\n      <h2>Topics</h2>\n      <ul>\n        <li>\n          <Link to={`${match.url}/rendering`}>Rendering with React</Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/components`}>Components</Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/props-v-state`}>Props v. State</Link>\n        </li>\n      </ul>\n\n      <Route path={`${match.path}/:topicId`} component={Topic} />\n      <Route\n        exact\n        path={match.path}\n        render={() => <h3>Please select a topic.</h3>}\n      />\n    </div>\n  );\n}\n\nfunction Topic({ match }) {\n  return (\n    <div>\n      <h3>{match.params.topicId}</h3>\n    </div>\n  );\n}\n\nexport default BasicExample;\n","import { configureStore } from '@reduxjs/toolkit';\nimport videoReducer from '../features/video/videoSlice';\nimport castReducer from '../features/cast/castSlice';\n\nexport default configureStore({\n  reducer: {\n    video: videoReducer,\n    cast: castReducer,\n  }\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}