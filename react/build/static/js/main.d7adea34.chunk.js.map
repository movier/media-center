{"version":3,"sources":["features/video/videoSlice.js","common/MediaCell.js","features/video/VideoList.js","features/cast/castSlice.js","features/video/MediaDetails.js","RemainingTime.js","features/cast/CastList.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["videoSlice","createSlice","name","initialState","list","reducers","saveVideoListData","state","action","payload","removeVideo","filter","f","id","parseInt","actions","selectVideoList","video","MediaCell","_ref","media","uri","poster_uri","title","people","created_at","datetime","size","duration","media_type","peopleNames","map","m","join","react_default","a","createElement","react_router_dom","className","to","concat","style","position","src","alt","display","alignItems","top","right","color","fontSize","fontWeight","Date","Math","ceil","toISOString","substr","marginLeft","class","bottom","left","VideoList","props","videoListData","useSelector","dispatch","useDispatch","useEffect","length","fetch","then","response","json","data","console","log","has_error","error_code","error_message","remainingSeconds","remaining_seconds","history","replace","marginTop","textAlign","onClick","value","index","key","castSlice","saveCastListData","removeVideoFromPeople","selectCastList","cast","MediaDetails","searchParams","URLSearchParams","location","search","get","_useState","useState","split","_useState2","Object","slicedToArray","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","mediaDetails","setMediaDetails","controls","autoPlay","renderMedia","goBack","window","confirm","method","RemainingTime","_this","classCallCheck","this","_super","call","secondsToString","bind","assertThisInitialized","_this2","intervalId","setInterval","clearInterval","setState","seconds","floor","React","Component","CastList","castListData","cast_index","Topics","_ref2","match","url","react_router","path","component","Topic","exact","render","_ref3","params","topicId","BasicExample","configureStore","reducer","videoReducer","castReducer","Boolean","hostname","ReactDOM","StrictMode","es","store","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d7adea34.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const videoSlice = createSlice({\n  name: 'video',\n  initialState: {\n    list: [],\n  },\n  reducers: {\n    saveVideoListData: (state, action) => {\n      state.list = action.payload;\n    },\n    removeVideo: (state, action) => {\n      state.list = state.list.filter(f => f.id !== parseInt(action.payload));\n    }\n  },\n});\n\nexport const { saveVideoListData, removeVideo } = videoSlice.actions;\n\nexport default videoSlice.reducer;\nexport const selectVideoList = state => state.video.list;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\n/**\n * Format bytes as human-readable text.\n * \n * @param bytes Number of bytes.\n * @param si True to use metric (SI) units, aka powers of 1000. False to use \n *           binary (IEC), aka powers of 1024.\n * @param dp Number of decimal places to display.\n * \n * @return Formatted string.\n */\n function humanFileSize(bytes, si=false, dp=1) {\n  const thresh = si ? 1000 : 1024;\n\n  if (Math.abs(bytes) < thresh) {\n    return bytes + ' B';\n  }\n\n  const units = si \n    ? ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'] \n    : ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\n  let u = -1;\n  const r = 10**dp;\n\n  do {\n    bytes /= thresh;\n    ++u;\n  } while (Math.round(Math.abs(bytes) * r) / r >= thresh && u < units.length - 1);\n\n\n  return bytes.toFixed(dp) + ' ' + units[u];\n}\n\nexport default function ({ media }) {\n  const { uri, poster_uri, title, id, people, created_at, size, datetime, duration, media_type} = media;\n  const peopleNames = people.map(m => m.name).join(',');\n  return (\n    <div>\n      <Link className=\"VideoList__link\" to={`/watch?v=${uri}&id=${id}&cast=${peopleNames}`}>\n        <div style={{ position: 'relative' }}>\n          <img src={poster_uri} alt={title} />\n          {media_type == 2 && <div style={{ display: 'flex', alignItems: 'center', position: 'absolute', top: 10, right: 10, color: 'white', fontSize: 12, fontWeight: 'bold' }}>{new Date(Math.ceil(duration) * 1000).toISOString().substr(11, 8)}\n          <span style={{ marginLeft: 4 }} class=\"material-symbols-outlined\">play_circle</span>\n          </div>}\n          <div style={{ position: 'absolute', bottom: 10, left: 10, color: 'white', fontSize: 12, fontWeight: 'bold' }}>\n            <p className=\"VideoList__title\">{created_at}</p>\n            <p className=\"VideoList__title\">{datetime}</p>\n          </div>\n        </div>\n        {/* <p className=\"VideoList__title\">{title}</p> */}\n        {/* <p className=\"VideoList__title\">{humanFileSize(size, true)}</p> */}\n        {/* <p className=\"VideoList__title\">{new Date(Math.ceil(duration) * 1000).toISOString().substr(11, 8)}</p> */}\n      </Link>\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  saveVideoListData,\n  selectVideoList,\n } from './videoSlice';\nimport './VideoList.css';\nimport { Link } from \"react-router-dom\";\nimport MediaCell from '../../common/MediaCell';\n\nexport default function VideoList(props) {\n\n  const videoListData = useSelector(selectVideoList);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (videoListData.length > 0) return;\n    fetch('/api')\n      .then(response => response.json())\n      .then(data => {\n        console.log('response', data);\n        if (data.has_error && data.error_code === 403) {\n          console.log('error', data.error_message);\n          const { remaining_seconds: remainingSeconds } = data.data;\n          props.history.replace('/remaining-time', { remainingSeconds });\n        } else {\n          dispatch(saveVideoListData(data));\n        }\n      });\n  }, []);\n\n  const handleCheckUpdate = () => {\n    fetch('/api?is_check=true')\n      .then(response => response.json())\n      .then(data => {\n        dispatch(saveVideoListData(data));\n      });\n  }\n\n  return (\n    <div>\n      <div style={{ marginTop: 16, textAlign: 'center' }}>\n        <button onClick={handleCheckUpdate}>检查更新</button>\n        <Link to=\"/cast\">Cast</Link>\n      </div>\n      <div className=\"VideoList\">\n        {videoListData.map((value, index) => {\n          return <MediaCell key={index} media={value} />;\n        })}\n      </div>\n    </div>\n  );\n\n}\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const castSlice = createSlice({\n  name: 'cast',\n  initialState: {\n    list: [],\n  },\n  reducers: {\n    saveCastListData: (state, action) => {\n      state.list = action.payload;\n    },\n    removeVideoFromPeople: (state, action) => {\n      for (let index = 0; index < state.list.length; index++) {\n        const people = state.list[index];\n        people.media = people.media.filter(f => f.id !== parseInt(action.payload));\n      }\n    }\n  },\n});\n\nexport const { saveCastListData, removeVideoFromPeople } = castSlice.actions;\nexport const selectCastList = state => state.cast.list;\nexport default castSlice.reducer;\n","import React, { useState, useEffect } from 'react';\nimport '../../App.css';\nimport { useDispatch } from 'react-redux';\nimport { removeVideo } from './videoSlice';\nimport { removeVideoFromPeople } from '../cast/castSlice';\nimport './MediaDetails.css';\n\nexport default function MediaDetails(props) {\n\n  const searchParams = new URLSearchParams(props.location.search);\n  const id = searchParams.get('id');\n\n  const [cast, setCast] = useState(searchParams.get('cast').split(','));\n  const [newCast, setNewCast] = useState('');\n  const [start, setStart] = useState('');\n  const [end, setEnd] = useState('');\n  const [mediaDetails, setMediaDetails] = useState(null);\n\n  useEffect(() => {\n    fetch(`/api/media/${id}`)\n      .then(response => response.json())\n      .then(data => {\n        setMediaDetails(data);\n      });\n  }, []);\n\n  const dispatch = useDispatch();\n\n  const handleDeleteButtonClicked = () => {\n    if (window.confirm(\"Are you sure to delete this video?\")) {\n      fetch(`/api/media/${id}`, {\n        method: 'DELETE'\n      }).then(() => {\n        dispatch(removeVideo(id));\n        dispatch(removeVideoFromPeople(id));\n        props.history.goBack();\n      });\n    }\n  }\n\n  const handleAddCastButtonClick = () => {\n    if (!newCast) return;\n    const data = { cast_name: newCast };\n    fetch(`/api/media/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    }).then(() => {\n      setCast(cast.concat(newCast));\n      setNewCast('');\n    })\n  }\n\n  const handleConfirmButtonClick = () => {\n    if (!start || !end) return;\n    const input = searchParams.get('v');\n    const [name, suffix] = input.split('.');\n    const output = `${name}_copy.${suffix}`;\n    const data = {\n      input,\n      output,\n      start,\n      end,\n    };\n    const favicon = document.getElementById('favicon');\n    favicon.href = process.env.PUBLIC_URL + '/loading.gif';\n    fetch('/api/ffmpeg', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    }).then(() => {\n      favicon.href = process.env.PUBLIC_URL + '/favicon.ico';\n    });\n  }\n\n  function renderMedia(media) {\n    switch (media.media_type) {\n      case 1:\n        return <img className=\"media\" src={media.uri} />;\n      case 2:\n        return (\n          <video className=\"media\" controls autoPlay>\n            <source src={searchParams.get('v')} />\n          </video>\n        );\n      default:\n        return <h1>Unknown Media Type</h1>; \n    }\n  }\n\n  function handleBackBtnClicked() {\n    props.history.goBack();\n  }\n\n  if (!mediaDetails) return null;\n  return (\n    <div className=\"media-container\">\n      {renderMedia(mediaDetails)}\n      <div className='operation-container'>\n        <div className=\"operation-container__inner\">\n          <div className=\"icon-container\" onClick={handleBackBtnClicked}>\n            <span class=\"material-symbols-outlined\">arrow_back</span>\n          </div>\n          <div className=\"icon-container\" onClick={handleDeleteButtonClicked}>\n            <span className=\"material-symbols-outlined\">delete</span>\n          </div>\n        </div>\n        {/* <div>\n          {cast.map((m, i) => (\n            <span style={{ marginRight: 10 }} key={i}>{m}</span>\n          ))}\n        </div>\n        <div>\n          <span>New Cast:</span>\n          <input type=\"text\" value={newCast} onChange={e => setNewCast(e.target.value)} />\n          <button onClick={handleAddCastButtonClick}>Add Cast</button>\n        </div>\n        <div>\n          <span>Start:</span>\n          <input type=\"text\" value={start} onChange={e => setStart(e.target.value)} />\n          <span>End:</span>\n          <input type=\"text\" value={end} onChange={e => setEnd(e.target.value)} />\n          <button onClick={handleConfirmButtonClick}>Confirm</button>\n        </div> */}\n      </div>\n    </div>\n  );\n\n}\n","import React from 'react';\n\nclass RemainingTime extends React.Component {\n  constructor(props) {\n    super(props);\n\n    console.log('history state', props.location);\n    const { remainingSeconds } = props.location.state;\n    this.state = {\n      remainingSeconds,\n    };\n    this.secondsToString = this.secondsToString.bind(this);\n  }\n\n  componentDidMount() {\n    const intervalId = setInterval(() => {\n      if (this.state.remainingSeconds === 0) {\n        clearInterval(intervalId);\n        this.props.history.replace('/');\n      } else {\n        this.setState({ remainingSeconds: this.state.remainingSeconds - 1 });\n      }\n    }, 1000);\n  }\n\n  secondsToString(seconds) {\n    var numyears = Math.floor(seconds / 31536000);\n    var numdays = Math.floor((seconds % 31536000) / 86400);\n    var numhours = Math.floor(((seconds % 31536000) % 86400) / 3600);\n    var numminutes = Math.floor((((seconds % 31536000) % 86400) % 3600) / 60);\n    var numseconds = (((seconds % 31536000) % 86400) % 3600) % 60;\n    return numyears + \" years \" + numdays + \" days \" + numhours + \" hours \" + numminutes + \" minutes \" + numseconds + \" seconds\";\n  }\n\n  render() {\n    return <h1 style={{ color: 'white' }}>Remaining time: {this.secondsToString(this.state.remainingSeconds)} </h1>;\n  }\n}\n\nexport default RemainingTime;\n","import React, { useEffect } from 'react';\nimport './VideoList.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  saveCastListData,\n  selectCastList,\n } from './castSlice';\nimport MediaCell from '../../common/MediaCell';\n\nexport default function CastList() {\n\n  const castListData = useSelector(selectCastList);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (castListData.length > 0) return;\n    fetch('/api/cast')\n      .then(response => response.json())\n      .then(data => {\n        dispatch(saveCastListData(data));\n      });\n  }, []);\n\n  return (\n    <div>\n      {castListData.map((cast, cast_index) => {\n        const { name, media } = cast;\n        return (\n          <div key={cast_index}>\n            <div style={{ color: 'white' }}>{name}</div>\n            <div className=\"VideoList\">\n              {media.map((value, index) => {\n                return <MediaCell key={index} media={value} />;\n              })}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport VideoList from './features/video/VideoList';\nimport MediaDetails from './features/video/MediaDetails';\nimport RemainingTime from './RemainingTime';\nimport CastList from './features/cast/CastList';\n\nfunction BasicExample() {\n  return (\n    <Router>\n      <Route exact path=\"/\" component={VideoList} />\n      <Route path=\"/watch\" component={MediaDetails} />\n      <Route path=\"/topics\" component={Topics} />\n      <Route path=\"/remaining-time\" component={RemainingTime} />\n      <Route path=\"/cast\" component={CastList} />\n    </Router>\n  );\n}\n\nfunction About({ match }) {\n  console.log('location', match);\n  return (\n    <div>\n      <h2>About, { decodeURIComponent(match.params.path) }</h2>\n    </div>\n  );\n}\n\nfunction Topics({ match }) {\n  return (\n    <div>\n      <h2>Topics</h2>\n      <ul>\n        <li>\n          <Link to={`${match.url}/rendering`}>Rendering with React</Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/components`}>Components</Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/props-v-state`}>Props v. State</Link>\n        </li>\n      </ul>\n\n      <Route path={`${match.path}/:topicId`} component={Topic} />\n      <Route\n        exact\n        path={match.path}\n        render={() => <h3>Please select a topic.</h3>}\n      />\n    </div>\n  );\n}\n\nfunction Topic({ match }) {\n  return (\n    <div>\n      <h3>{match.params.topicId}</h3>\n    </div>\n  );\n}\n\nexport default BasicExample;\n","import { configureStore } from '@reduxjs/toolkit';\nimport videoReducer from '../features/video/videoSlice';\nimport castReducer from '../features/cast/castSlice';\n\nexport default configureStore({\n  reducer: {\n    video: videoReducer,\n    cast: castReducer,\n  }\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}