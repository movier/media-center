{"version":3,"sources":["features/video/videoSlice.js","features/video/VideoList.js","features/video/VideoDetail.js","RemainingTime.js","features/cast/castSlice.js","features/cast/CastList.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["videoSlice","createSlice","name","initialState","list","reducers","saveVideoListData","state","action","payload","actions","selectVideoList","video","VideoList","props","videoListData","useSelector","dispatch","useDispatch","useEffect","length","fetch","then","response","json","data","console","log","has_error","error_code","error_message","remainingSeconds","remaining_seconds","history","replace","react_default","a","createElement","style","marginTop","textAlign","onClick","react_router_dom","to","className","map","value","index","uri","poster_uri","title","id","castNames","cast","m","join","key","concat","src","alt","VideoDetail","_this","Object","classCallCheck","this","_super","call","handleDeleteButtonClicked","window","confirm","URLSearchParams","location","search","get","method","goBack","handleShotButtonClicked","handleAddCastButtonClick","newCast","cast_name","headers","Content-Type","body","JSON","stringify","setState","handleConfirmButtonClick","start","end","input","_input$split","split","_input$split2","slicedToArray","suffix","output","favicon","document","getElementById","href","searchParams","_this2","Fragment","controls","autoPlay","i","marginRight","type","onChange","e","target","React","Component","RemainingTime","secondsToString","bind","assertThisInitialized","intervalId","setInterval","clearInterval","seconds","Math","floor","color","castSlice","saveCastListData","selectCastList","CastList","castListData","cast_index","videos","Topics","_ref2","match","url","react_router","path","component","Topic","exact","render","_ref3","params","topicId","BasicExample","configureStore","reducer","videoReducer","castReducer","Boolean","hostname","ReactDOM","StrictMode","es","store","src_App","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4c626272.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const videoSlice = createSlice({\n  name: 'video',\n  initialState: {\n    list: [],\n  },\n  reducers: {\n    saveVideoListData: (state, action) => {\n      state.list = action.payload;\n    },\n  },\n});\n\nexport const { saveVideoListData } = videoSlice.actions;\n\nexport default videoSlice.reducer;\nexport const selectVideoList = state => state.video.list;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  saveVideoListData,\n  selectVideoList,\n } from './videoSlice';\nimport './VideoList.css';\nimport { Link } from \"react-router-dom\";\n\nexport default function VideoList(props) {\n\n  const videoListData = useSelector(selectVideoList);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (videoListData.length > 0) return;\n    fetch('/api')\n      .then(response => response.json())\n      .then(data => {\n        console.log('response', data);\n        if (data.has_error && data.error_code === 403) {\n          console.log('error', data.error_message);\n          const { remaining_seconds: remainingSeconds } = data.data;\n          props.history.replace('/remaining-time', { remainingSeconds });\n        } else {\n          dispatch(saveVideoListData(data));\n        }\n      });\n  }, []);\n\n  const handleCheckUpdate = () => {\n    fetch('/api?is_check=true')\n      .then(response => response.json())\n      .then(data => {\n        dispatch(saveVideoListData(data));\n      });\n  }\n\n  return (\n    <div>\n      <div style={{ marginTop: 16, textAlign: 'center' }}>\n        <button onClick={handleCheckUpdate}>检查更新</button>\n        <Link to=\"/cast\">Cast</Link>\n      </div>\n      <div className=\"VideoList\">\n        {videoListData.map((value, index) => {\n          const { uri, poster_uri, title, id, cast } = value;\n          const castNames = cast.map(m => m.name).join(',');\n          return (\n            <div key={index}>\n              <Link className=\"VideoList__link\" to={`/watch?v=${uri}&id=${id}&cast=${castNames}`}>\n                <img src={poster_uri} alt={title} />\n                <p className=\"VideoList__title\">{title}</p>\n              </Link>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n\n}\n","import React from 'react';\nimport '../../App.css';\n\nclass VideoDetail extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    console.log('dd', props.location.search);\n    const searchParams = new URLSearchParams(props.location.search);\n    this.state = {\n      cast: searchParams.get('cast').split(','),\n      newCast: '',\n      start: '',\n      end: '',\n    };\n  }\n\n  handleDeleteButtonClicked = () => {\n    if (window.confirm(\"Are you sure to delete this video?\")) { \n      const searchParams = new URLSearchParams(this.props.location.search);\n      const id = searchParams.get('id');\n      fetch(`/api/videos/${id}`, {\n        method: 'DELETE'\n      }).then(() => {\n        this.props.history.goBack();\n      });\n    }\n  }\n\n  handleShotButtonClicked = () => {\n    fetch('/api/shots', {\n      method: 'POST'\n    }).then(() => {\n      this.props.history.goBack()\n    });\n  }\n\n  handleAddCastButtonClick = () => {\n    if (!this.state.newCast) return;\n    const searchParams = new URLSearchParams(this.props.location.search);\n    const id = searchParams.get('id');\n    const data = { cast_name: this.state.newCast };\n    fetch(`/api/videos/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    }).then(() => {\n      this.setState({ cast: this.state.cast.concat(this.state.newCast), newCast: '' });\n    })\n  }\n\n  handleConfirmButtonClick = () => {\n    if (!this.state.start || !this.state.end) return;\n    const searchParams = new URLSearchParams(this.props.location.search);\n    const input = searchParams.get('v');\n    const [name, suffix]= input.split('.');\n    const output = `${name}_copy.${suffix}`;\n    const data = {\n      input,\n      output,\n      start: this.state.start,\n      end: this.state.end,\n    };\n    const favicon = document.getElementById('favicon');\n    favicon.href = process.env.PUBLIC_URL + '/loading.gif';\n    fetch('/api/ffmpeg', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    }).then(() => {\n      favicon.href = process.env.PUBLIC_URL + '/favicon.ico';\n    });\n  }\n\n  render() {\n    const searchParams = new URLSearchParams(this.props.location.search);\n    return (\n      <>\n        <video controls autoPlay>\n          <source src={searchParams.get('v')} />\n        </video>\n        <button onClick={this.handleDeleteButtonClicked}>Delete</button>\n        <button onClick={this.handleShotButtonClicked}>Shot</button>\n        <div>{this.state.cast.map((m, i) => <span style={{ marginRight: 10 }} key={i}>{m}</span>)}</div>\n        <div>\n          <span>New Cast:</span>\n          <input type=\"text\" value={this.state.newCast} onChange={e => this.setState({ newCast: e.target.value })} />\n          <button onClick={this.handleAddCastButtonClick}>Add Cast</button>\n        </div>\n        <div>\n          <span>Start:</span>\n          <input type=\"text\" value={this.state.start} onChange={e => this.setState({ start: e.target.value })} />\n          <span>End:</span>\n          <input type=\"text\" value={this.state.end} onChange={e => this.setState({ end: e.target.value })} />\n          <button onClick={this.handleConfirmButtonClick}>Confirm</button>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default VideoDetail;\n","import React from 'react';\n\nclass RemainingTime extends React.Component {\n  constructor(props) {\n    super(props);\n\n    console.log('history state', props.location);\n    const { remainingSeconds } = props.location.state;\n    this.state = {\n      remainingSeconds,\n    };\n    this.secondsToString = this.secondsToString.bind(this);\n  }\n\n  componentDidMount() {\n    const intervalId = setInterval(() => {\n      if (this.state.remainingSeconds === 0) {\n        clearInterval(intervalId);\n        this.props.history.replace('/');\n      } else {\n        this.setState({ remainingSeconds: this.state.remainingSeconds - 1 });\n      }\n    }, 1000);\n  }\n\n  secondsToString(seconds) {\n    var numyears = Math.floor(seconds / 31536000);\n    var numdays = Math.floor((seconds % 31536000) / 86400);\n    var numhours = Math.floor(((seconds % 31536000) % 86400) / 3600);\n    var numminutes = Math.floor((((seconds % 31536000) % 86400) % 3600) / 60);\n    var numseconds = (((seconds % 31536000) % 86400) % 3600) % 60;\n    return numyears + \" years \" + numdays + \" days \" + numhours + \" hours \" + numminutes + \" minutes \" + numseconds + \" seconds\";\n  }\n\n  render() {\n    return <h1 style={{ color: 'white' }}>Remaining time: {this.secondsToString(this.state.remainingSeconds)} </h1>;\n  }\n}\n\nexport default RemainingTime;\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const castSlice = createSlice({\n  name: 'cast',\n  initialState: {\n    list: [],\n  },\n  reducers: {\n    saveCastListData: (state, action) => {\n      state.list = action.payload;\n    },\n  },\n});\n\nexport const { saveCastListData } = castSlice.actions;\nexport const selectCastList = state => state.cast.list;\nexport default castSlice.reducer;\n","import React, { useEffect } from 'react';\nimport './VideoList.css';\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  saveCastListData,\n  selectCastList,\n } from './castSlice';\n\nexport default function CastList() {\n\n  const castListData = useSelector(selectCastList);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (castListData.length > 0) return;\n    fetch('/api/cast')\n      .then(response => response.json())\n      .then(data => {\n        dispatch(saveCastListData(data));\n      });\n  }, []);\n\n  return (\n    <div>\n      {castListData.map((cast, cast_index) => {\n        const { name, videos } = cast;\n        return (\n          <div key={cast_index}>\n            <div style={{ color: 'white' }}>{name}</div>\n            <div className=\"VideoList\">\n              {videos.map((value, index) => {\n                const { uri, poster_uri, title, id, cast } = value;\n                const castNames = cast.map(m => m.name).join(',');\n                return (\n                  <div key={index}>\n                    <Link className=\"VideoList__link\" to={`/watch?v=${uri}&id=${id}&cast=${castNames}`}>\n                      <img src={poster_uri} alt={title} />\n                      <p className=\"VideoList__title\">{title}</p>\n                    </Link>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport VideoList from './features/video/VideoList';\nimport VideoDetail from './features/video/VideoDetail';\nimport RemainingTime from './RemainingTime';\nimport CastList from './features/cast/CastList';\n\nfunction BasicExample() {\n  return (\n    <Router>\n      <div>\n        <Route exact path=\"/\" component={VideoList} />\n        <Route path=\"/watch\" component={VideoDetail} />\n        <Route path=\"/topics\" component={Topics} />\n        <Route path=\"/remaining-time\" component={RemainingTime} />\n        <Route path=\"/cast\" component={CastList} />\n      </div>\n    </Router>\n  );\n}\n\nfunction About({ match }) {\n  console.log('location', match);\n  return (\n    <div>\n      <h2>About, { decodeURIComponent(match.params.path) }</h2>\n    </div>\n  );\n}\n\nfunction Topics({ match }) {\n  return (\n    <div>\n      <h2>Topics</h2>\n      <ul>\n        <li>\n          <Link to={`${match.url}/rendering`}>Rendering with React</Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/components`}>Components</Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/props-v-state`}>Props v. State</Link>\n        </li>\n      </ul>\n\n      <Route path={`${match.path}/:topicId`} component={Topic} />\n      <Route\n        exact\n        path={match.path}\n        render={() => <h3>Please select a topic.</h3>}\n      />\n    </div>\n  );\n}\n\nfunction Topic({ match }) {\n  return (\n    <div>\n      <h3>{match.params.topicId}</h3>\n    </div>\n  );\n}\n\nexport default BasicExample;\n","import { configureStore } from '@reduxjs/toolkit';\nimport videoReducer from '../features/video/videoSlice';\nimport castReducer from '../features/cast/castSlice';\n\nexport default configureStore({\n  reducer: {\n    video: videoReducer,\n    cast: castReducer,\n  }\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}