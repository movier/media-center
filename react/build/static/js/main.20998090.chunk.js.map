{"version":3,"sources":["VideoList.js","VideoDetail.js","RemainingTime.js","App.js","serviceWorker.js","index.js"],"names":["VideoList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleCheckUpdate","fetch","then","response","json","data","setState","state","_this2","console","log","has_error","error_code","error_message","remainingSeconds","remaining_seconds","history","replace","react_default","a","createElement","style","marginTop","textAlign","onClick","className","map","value","index","uri","poster_uri","title","id","key","react_router_dom","to","concat","src","alt","React","Component","VideoDetail","handleDeleteButtonClicked","window","confirm","URLSearchParams","location","search","get","method","goBack","handleShotButtonClicked","searchParams","Fragment","controls","autoPlay","RemainingTime","secondsToString","bind","assertThisInitialized","setInterval","seconds","Math","floor","color","Topics","_ref2","match","url","react_router","path","component","Topic","exact","render","_ref3","params","topicId","BasicExample","Boolean","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.20998090.chunk.js","sourcesContent":["import React from 'react';\nimport './VideoList.css';\nimport { Link } from \"react-router-dom\";\n\nclass VideoList extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      data: [],\n    };\n  }\n\n  componentDidMount() {\n    fetch('/api')\n      .then(response => response.json())\n      .then(data => { \n        console.log('response', data);\n        if (data.has_error && data.error_code === 403) {\n          console.log('error', data.error_message);\n          const { remaining_seconds: remainingSeconds } = data.data;\n          this.props.history.replace('/remaining-time', { remainingSeconds });\n        } else {\n          this.setState({ data });\n        }\n      });\n  }\n\n  handleCheckUpdate = () => {\n    fetch('/api?is_check=true')\n      .then(response => response.json())\n      .then(data => {\n        this.setState({ data });\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <div style={{ marginTop: 16, textAlign: 'center' }}>\n          <button onClick={this.handleCheckUpdate}>检查更新</button>\n        </div>\n        <div className=\"VideoList\">\n          {this.state.data.map((value, index) => {\n            const { uri, poster_uri, title, id } = value;\n            return (\n              <div key={index}>\n                <Link className=\"VideoList__link\" to={`/watch?v=${uri}&id=${id}`}>\n                  <img src={poster_uri} alt={title} />\n                  <p className=\"VideoList__title\">{title}</p>\n                </Link>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default VideoList;\n","import React from 'react';\nimport './App.css';\n\nclass VideoDetail extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    console.log('dd', props.location.search);\n    const searchParams = new URLSearchParams(props.location.search);\n    console.log('video detail', searchParams.get('v'));\n  }\n\n  // componentDidMount() {\n  //   fetch('/api')\n  //     .then(response => response.json())\n  //     .then(data => { \n  //       console.log('response', data);\n  //       this.setState({ data });\n  //     });\n  // }\n\n  handleDeleteButtonClicked = () => {\n    if (window.confirm(\"Are you sure to delete this video?\")) { \n      const searchParams = new URLSearchParams(this.props.location.search);\n      const id = searchParams.get('id');\n      fetch(`/api/videos/${id}`, {\n        method: 'DELETE'\n      }).then(() => {\n        this.props.history.goBack();\n      });\n    }\n  }\n\n  handleShotButtonClicked = () => {\n    fetch('/api/shots', {\n      method: 'POST'\n    }).then(() => {\n      this.props.history.goBack()\n    });\n  }\n\n  render() {\n    const searchParams = new URLSearchParams(this.props.location.search);\n    return (\n      <>\n        <video controls autoPlay>\n          <source src={searchParams.get('v')} />\n        </video>\n        <button onClick={this.handleDeleteButtonClicked}>Delete</button>\n        <button onClick={this.handleShotButtonClicked}>Shot</button>\n      </>\n    );\n  }\n}\n\nexport default VideoDetail;\n","import React from 'react';\n\nclass RemainingTime extends React.Component {\n  constructor(props) {\n    super(props);\n\n    console.log('history state', props.location);\n    const { remainingSeconds } = props.location.state;\n    this.state = {\n      remainingSeconds,\n    };\n    this.secondsToString = this.secondsToString.bind(this);\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      if (this.state.remainingSeconds === 0) {\n        this.props.history.replace('/');\n      } else {\n        this.setState({ remainingSeconds: this.state.remainingSeconds - 1 });\n      }\n    }, 1000);\n  }\n\n  secondsToString(seconds) {\n    var numyears = Math.floor(seconds / 31536000);\n    var numdays = Math.floor((seconds % 31536000) / 86400);\n    var numhours = Math.floor(((seconds % 31536000) % 86400) / 3600);\n    var numminutes = Math.floor((((seconds % 31536000) % 86400) % 3600) / 60);\n    var numseconds = (((seconds % 31536000) % 86400) % 3600) % 60;\n    return numyears + \" years \" + numdays + \" days \" + numhours + \" hours \" + numminutes + \" minutes \" + numseconds + \" seconds\";\n  }\n\n  render() {\n    return <h1 style={{ color: 'white' }}>Remaining time: {this.secondsToString(this.state.remainingSeconds)} </h1>;\n  }\n}\n\nexport default RemainingTime;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport VideoList from './VideoList';\nimport VideoDetail from './VideoDetail';\nimport RemainingTime from './RemainingTime';\n\nfunction BasicExample() {\n  return (\n    <Router>\n      <div>\n        <Route exact path=\"/\" component={VideoList} />\n        <Route path=\"/watch\" component={VideoDetail} />\n        <Route path=\"/topics\" component={Topics} />\n        <Route path=\"/remaining-time\" component={RemainingTime} />\n      </div>\n    </Router>\n  );\n}\n\nfunction About({ match }) {\n  console.log('location', match);\n  return (\n    <div>\n      <h2>About, { decodeURIComponent(match.params.path) }</h2>\n    </div>\n  );\n}\n\nfunction Topics({ match }) {\n  return (\n    <div>\n      <h2>Topics</h2>\n      <ul>\n        <li>\n          <Link to={`${match.url}/rendering`}>Rendering with React</Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/components`}>Components</Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/props-v-state`}>Props v. State</Link>\n        </li>\n      </ul>\n\n      <Route path={`${match.path}/:topicId`} component={Topic} />\n      <Route\n        exact\n        path={match.path}\n        render={() => <h3>Please select a topic.</h3>}\n      />\n    </div>\n  );\n}\n\nfunction Topic({ match }) {\n  return (\n    <div>\n      <h3>{match.params.topicId}</h3>\n    </div>\n  );\n}\n\nexport default BasicExample;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}